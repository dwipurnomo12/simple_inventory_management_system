@model List<Inventory.Models.Supplier>
@{
    ViewData["Title"] = "Suppliers";
    var successMessage = TempData["SuccessMessage"] as String;
}

<div class="container-fluid">
    <div class="card-group">
        <div class="card border-right">
            <div class="card-header">
                <div class="row">
                    <div class="col-6">
                        <h3>Suppliers</h3>
                    </div>
                    <div class="col-6">
                        <a asp-action="Create" class="btn btn-primary float-right">Add Data</a>
                    </div>
                </div>
            </div>

            <div class="card-body">

                @if (!string.IsNullOrEmpty(successMessage))
                {
                    <div class="alert alert-success">
                        @successMessage
                    </div>
                }

                <div class="table-responsive">
                    <table id="suppliers" class="display table table-striped table-hover">
                        <thead>
                            <tr>
                                <td class="text-left">@Html.DisplayName("#")</td>
                                <td class="text-left">@Html.DisplayName("Supplier Name")</td>
                                <td class="text-left">@Html.DisplayName("Supplier Location")</td>
                                <td class="text-left">@Html.DisplayName("Options")</td>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var supplier in Model)
                            {
                                <tr>
                                    <td class="text-left">@(Model.IndexOf(supplier) + 1)</td>
                                    <td class="text-left">@supplier.SupplierName</td>
                                    <td class="text-left">@supplier.SupplierLocation</td>
                                    <td>
                                        <a asp-action="Edit" class="btn btn-warning" asp-route-id="@supplier.Id"><i class="fas fa-regular fa-pen-to-square"></i></a>
                                        <button class="btn btn-danger delete-btn" data-id="@supplier.Id" data-name="@supplier.SupplierName"><i class="fas fa-regular fa-trash"></i></button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    <form id="csrfTokenForm" style="display:none;">
                        @Html.AntiForgeryToken()
                    </form>

                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready( function () {
        $('#suppliers').DataTable();
    } );
</script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const deleteButtons = document.querySelectorAll('.delete-btn');

        deleteButtons.forEach(button => {
            button.addEventListener('click', function () {
                const id = this.getAttribute('data-id');
                const name = this.getAttribute('data-name');

                Swal.fire({
                    title: 'Are you sure?',
                    text: `Supplier "${name}" will be deleted permanently!`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Yes, Delete!',
                    cancelButtonText: 'Batal'
                }).then((result) => {
                    if (result.isConfirmed) {
                            const csrfTokenElement = document.querySelector('input[name="__RequestVerificationToken"]');
                            const csrfToken = csrfTokenElement ? csrfTokenElement.value : '';

                            if (!csrfToken) {
                                console.error('CSRF Token not found!');
                                return;
                            }
                        // Lakukan delete menggunakan fetch API
                        fetch(`/Supplier/Delete/${id}`, {
                            method: 'POST',
                            headers: {
                                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                            }
                        }).then(response => {
                            if (response.ok) {
                                Swal.fire(
                                    'Dihapus!',
                                    `Supplier "${name}" deleted successfully.`,
                                    'success'
                                ).then(() => {
                                    location.reload(); // Refresh halaman
                                });
                            } else {
                                Swal.fire(
                                    'Error!',
                                    'An error occurred while deleting a supplier',
                                    'error'
                                );
                            }
                        }).catch(error => {
                            Swal.fire(
                                'Error!',
                                'A network error occurred.',
                                'error'
                            );
                        });
                    }
                });
            });
        });
    });
</script>